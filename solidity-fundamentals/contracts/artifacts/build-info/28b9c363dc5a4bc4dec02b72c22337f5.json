{
	"id": "28b9c363dc5a4bc4dec02b72c22337f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity-fundamentals/contracts/FunctionsExample.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract FunctionsExample {\n    mapping(address => uint) tokenBalance;\n\n    address payable owner;\n\n    uint tokenPrice = 1 ether;\n\n    constructor() public {\n        owner = payable(msg.sender);\n        tokenBalance[owner] = 100;\n    }\n\n    // modifier\n    modifier onlyOwner {\n        require(msg.sender == owner, \"You are not allowed\");\n        _;\n    }\n\n\n    function getOwner() public view returns(address) {\n        return owner;\n    }\n    \n    function createNewToken() public {\n        \n        tokenBalance[owner]++;\n    }\n\n    function burnToken() public {\n        tokenBalance[owner]--;\n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"solidity-fundamentals/contracts/FunctionsExample.sol": {
				"FunctionsExample": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createNewToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":58:668  contract FunctionsExample {... */\n  mstore(0x40, 0x80)\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":180:187  1 ether */\n  0x0de0b6b3a7640000\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":162:187  uint tokenPrice = 1 ether */\n  0x02\n  sstore\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":194:294  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":241:251  msg.sender */\n  caller\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":225:230  owner */\n  0x01\n  0x00\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":225:252  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":284:287  100 */\n  0x64\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":262:274  tokenBalance */\n  0x00\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":262:281  tokenBalance[owner] */\n  dup1\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":275:280  owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":262:281  tokenBalance[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":262:287  tokenBalance[owner] = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":58:668  contract FunctionsExample {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":58:668  contract FunctionsExample {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x754fc38c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfaa0a264\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":509:589  function createNewToken() public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":421:499  function getOwner() public view returns(address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":595:661  function burnToken() public {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":509:589  function createNewToken() public {... */\n    tag_7:\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":561:573  tokenBalance */\n      0x00\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":561:580  tokenBalance[owner] */\n      dup1\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":574:579  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":561:580  tokenBalance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":561:582  tokenBalance[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":509:589  function createNewToken() public {... */\n      jump\t// out\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":421:499  function getOwner() public view returns(address) {... */\n    tag_9:\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":461:468  address */\n      0x00\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":487:492  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":480:492  return owner */\n      swap1\n      pop\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":421:499  function getOwner() public view returns(address) {... */\n      swap1\n      jump\t// out\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":595:661  function burnToken() public {... */\n    tag_13:\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":633:645  tokenBalance */\n      0x00\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":633:652  tokenBalance[owner] */\n      dup1\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":646:651  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":633:652  tokenBalance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":633:654  tokenBalance[owner]-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"solidity-fundamentals/contracts/FunctionsExample.sol\":595:661  function burnToken() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_21:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_22:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_29\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_23:\n        /* \"#utility.yul\":328:352   */\n      tag_31\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_33\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:773   */\n    tag_24:\n        /* \"#utility.yul\":641:718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":638:639   */\n      0x00\n        /* \"#utility.yul\":631:719   */\n      mstore\n        /* \"#utility.yul\":738:742   */\n      0x11\n        /* \"#utility.yul\":735:736   */\n      0x04\n        /* \"#utility.yul\":728:743   */\n      mstore\n        /* \"#utility.yul\":762:766   */\n      0x24\n        /* \"#utility.yul\":759:760   */\n      0x00\n        /* \"#utility.yul\":752:767   */\n      revert\n        /* \"#utility.yul\":779:856   */\n    tag_25:\n        /* \"#utility.yul\":816:823   */\n      0x00\n        /* \"#utility.yul\":845:850   */\n      dup2\n        /* \"#utility.yul\":834:850   */\n      swap1\n      pop\n        /* \"#utility.yul\":779:856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":862:1095   */\n    tag_16:\n        /* \"#utility.yul\":901:904   */\n      0x00\n        /* \"#utility.yul\":924:948   */\n      tag_37\n        /* \"#utility.yul\":942:947   */\n      dup3\n        /* \"#utility.yul\":924:948   */\n      tag_25\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":915:948   */\n      swap2\n      pop\n        /* \"#utility.yul\":970:1036   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":963:968   */\n      dup3\n        /* \"#utility.yul\":960:1037   */\n      sub\n        /* \"#utility.yul\":957:1060   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1040:1058   */\n      tag_39\n      tag_24\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":957:1060   */\n    tag_38:\n        /* \"#utility.yul\":1087:1088   */\n      0x01\n        /* \"#utility.yul\":1080:1085   */\n      dup3\n        /* \"#utility.yul\":1076:1089   */\n      add\n        /* \"#utility.yul\":1069:1089   */\n      swap1\n      pop\n        /* \"#utility.yul\":862:1095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1272   */\n    tag_20:\n        /* \"#utility.yul\":1140:1143   */\n      0x00\n        /* \"#utility.yul\":1163:1187   */\n      tag_41\n        /* \"#utility.yul\":1181:1186   */\n      dup3\n        /* \"#utility.yul\":1163:1187   */\n      tag_25\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1154:1187   */\n      swap2\n      pop\n        /* \"#utility.yul\":1209:1213   */\n      0x00\n        /* \"#utility.yul\":1202:1207   */\n      dup3\n        /* \"#utility.yul\":1199:1214   */\n      sub\n        /* \"#utility.yul\":1196:1237   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1217:1235   */\n      tag_43\n      tag_24\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1196:1237   */\n    tag_42:\n        /* \"#utility.yul\":1264:1265   */\n      0x01\n        /* \"#utility.yul\":1257:1262   */\n      dup3\n        /* \"#utility.yul\":1253:1266   */\n      sub\n        /* \"#utility.yul\":1246:1266   */\n      swap1\n      pop\n        /* \"#utility.yul\":1101:1272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a7133d5e22fba081bb9821a4d314d9bb0d894943b07e28495979489ec19adce964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a764000060025534801561001b575f80fd5b503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060645f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506102b7806100cc5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063754fc38c14610043578063893d20e81461004d578063faa0a2641461006b575b5f80fd5b61004b610075565b005b6100556100e9565b60405161006291906101c4565b60405180910390f35b610073610111565b005b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154809291906100e290610213565b9190505550565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061017e9061025a565b9190505550565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ae82610185565b9050919050565b6101be816101a4565b82525050565b5f6020820190506101d75f8301846101b5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f819050919050565b5f61021d8261020a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361024f5761024e6101dd565b5b600182019050919050565b5f6102648261020a565b91505f8203610276576102756101dd565b5b60018203905091905056fea2646970667358221220a7133d5e22fba081bb9821a4d314d9bb0d894943b07e28495979489ec19adce964736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x64 PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2B7 DUP1 PUSH2 0xCC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x754FC38C EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xFAA0A264 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE2 SWAP1 PUSH2 0x213 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17E SWAP1 PUSH2 0x25A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE DUP3 PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE DUP2 PUSH2 0x1A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x24F JUMPI PUSH2 0x24E PUSH2 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x264 DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 SGT RETURNDATASIZE 0x5E 0x22 0xFB LOG0 DUP2 0xBB SWAP9 0x21 LOG4 0xD3 EQ 0xD9 0xBB 0xD DUP10 0x49 NUMBER 0xB0 PUSH31 0x28495979489EC19ADCE964736F6C6343000816003300000000000000000000 ",
							"sourceMap": "58:610:0:-:0;;;180:7;162:25;;194:100;;;;;;;;;;241:10;225:5;;:27;;;;;;;;;;;;;;;;;;284:3;262:12;:19;275:5;;;;;;;;;;;262:19;;;;;;;;;;;;;;;:25;;;;58:610;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@burnToken_66": {
									"entryPoint": 273,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createNewToken_57": {
									"entryPoint": 117,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getOwner_48": {
									"entryPoint": 233,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1275:1",
										"nodeType": "YulBlock",
										"src": "0:1275:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "621:152:1",
													"nodeType": "YulBlock",
													"src": "621:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:77:1",
																		"nodeType": "YulLiteral",
																		"src": "641:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "631:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:1"
																},
																"nativeSrc": "631:88:1",
																"nodeType": "YulFunctionCall",
																"src": "631:88:1"
															},
															"nativeSrc": "631:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "631:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "735:1:1",
																		"nodeType": "YulLiteral",
																		"src": "735:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "738:4:1",
																		"nodeType": "YulLiteral",
																		"src": "738:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "728:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "728:6:1"
																},
																"nativeSrc": "728:15:1",
																"nodeType": "YulFunctionCall",
																"src": "728:15:1"
															},
															"nativeSrc": "728:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "728:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "759:1:1",
																		"nodeType": "YulLiteral",
																		"src": "759:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "762:4:1",
																		"nodeType": "YulLiteral",
																		"src": "762:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:1"
																},
																"nativeSrc": "752:15:1",
																"nodeType": "YulFunctionCall",
																"src": "752:15:1"
															},
															"nativeSrc": "752:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "752:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "593:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "593:180:1"
											},
											{
												"body": {
													"nativeSrc": "824:32:1",
													"nodeType": "YulBlock",
													"src": "824:32:1",
													"statements": [
														{
															"nativeSrc": "834:16:1",
															"nodeType": "YulAssignment",
															"src": "834:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "845:5:1",
																"nodeType": "YulIdentifier",
																"src": "845:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "834:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "834:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "779:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "806:5:1",
														"nodeType": "YulTypedName",
														"src": "806:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "816:7:1",
														"nodeType": "YulTypedName",
														"src": "816:7:1",
														"type": ""
													}
												],
												"src": "779:77:1"
											},
											{
												"body": {
													"nativeSrc": "905:190:1",
													"nodeType": "YulBlock",
													"src": "905:190:1",
													"statements": [
														{
															"nativeSrc": "915:33:1",
															"nodeType": "YulAssignment",
															"src": "915:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "942:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "942:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "924:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "924:17:1"
																},
																"nativeSrc": "924:24:1",
																"nodeType": "YulFunctionCall",
																"src": "924:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "915:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1038:22:1",
																"nodeType": "YulBlock",
																"src": "1038:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1040:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1040:16:1"
																			},
																			"nativeSrc": "1040:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:18:1"
																		},
																		"nativeSrc": "1040:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "963:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "963:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "970:66:1",
																		"nodeType": "YulLiteral",
																		"src": "970:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "960:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:1"
																},
																"nativeSrc": "960:77:1",
																"nodeType": "YulFunctionCall",
																"src": "960:77:1"
															},
															"nativeSrc": "957:103:1",
															"nodeType": "YulIf",
															"src": "957:103:1"
														},
														{
															"nativeSrc": "1069:20:1",
															"nodeType": "YulAssignment",
															"src": "1069:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1080:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1080:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1087:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1087:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1076:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:1"
																},
																"nativeSrc": "1076:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1076:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1069:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "862:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "891:5:1",
														"nodeType": "YulTypedName",
														"src": "891:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "901:3:1",
														"nodeType": "YulTypedName",
														"src": "901:3:1",
														"type": ""
													}
												],
												"src": "862:233:1"
											},
											{
												"body": {
													"nativeSrc": "1144:128:1",
													"nodeType": "YulBlock",
													"src": "1144:128:1",
													"statements": [
														{
															"nativeSrc": "1154:33:1",
															"nodeType": "YulAssignment",
															"src": "1154:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1181:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1181:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1163:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1163:17:1"
																},
																"nativeSrc": "1163:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1163:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1154:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1215:22:1",
																"nodeType": "YulBlock",
																"src": "1215:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1217:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1217:16:1"
																			},
																			"nativeSrc": "1217:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1217:18:1"
																		},
																		"nativeSrc": "1217:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1217:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1202:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1202:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1209:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1209:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1199:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1199:2:1"
																},
																"nativeSrc": "1199:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1199:15:1"
															},
															"nativeSrc": "1196:41:1",
															"nodeType": "YulIf",
															"src": "1196:41:1"
														},
														{
															"nativeSrc": "1246:20:1",
															"nodeType": "YulAssignment",
															"src": "1246:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1257:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1257:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1264:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1264:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1253:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1253:3:1"
																},
																"nativeSrc": "1253:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1253:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1246:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "1101:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1130:5:1",
														"nodeType": "YulTypedName",
														"src": "1130:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1140:3:1",
														"nodeType": "YulTypedName",
														"src": "1140:3:1",
														"type": ""
													}
												],
												"src": "1101:171:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063754fc38c14610043578063893d20e81461004d578063faa0a2641461006b575b5f80fd5b61004b610075565b005b6100556100e9565b60405161006291906101c4565b60405180910390f35b610073610111565b005b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154809291906100e290610213565b9190505550565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81548092919061017e9061025a565b9190505550565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101ae82610185565b9050919050565b6101be816101a4565b82525050565b5f6020820190506101d75f8301846101b5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f819050919050565b5f61021d8261020a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361024f5761024e6101dd565b5b600182019050919050565b5f6102648261020a565b91505f8203610276576102756101dd565b5b60018203905091905056fea2646970667358221220a7133d5e22fba081bb9821a4d314d9bb0d894943b07e28495979489ec19adce964736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x754FC38C EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xFAA0A264 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE2 SWAP1 PUSH2 0x213 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17E SWAP1 PUSH2 0x25A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE DUP3 PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE DUP2 PUSH2 0x1A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x24F JUMPI PUSH2 0x24E PUSH2 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x264 DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x276 JUMPI PUSH2 0x275 PUSH2 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 SGT RETURNDATASIZE 0x5E 0x22 0xFB LOG0 DUP2 0xBB SWAP9 0x21 LOG4 0xD3 EQ 0xD9 0xBB 0xD DUP10 0x49 NUMBER 0xB0 PUSH31 0x28495979489EC19ADCE964736F6C6343000816003300000000000000000000 ",
							"sourceMap": "58:610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:80;;;:::i;:::-;;421:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:66;;;:::i;:::-;;509:80;561:12;:19;574:5;;;;;;;;;;;561:19;;;;;;;;;;;;;;;;:21;;;;;;;;;:::i;:::-;;;;;;509:80::o;421:78::-;461:7;487:5;;;;;;;;;;;480:12;;421:78;:::o;595:66::-;633:12;:19;646:5;;;;;;;;;;;633:19;;;;;;;;;;;;;;;;:21;;;;;;;;;:::i;:::-;;;;;;595:66::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:180::-;641:77;638:1;631:88;738:4;735:1;728:15;762:4;759:1;752:15;779:77;816:7;845:5;834:16;;779:77;;;:::o;862:233::-;901:3;924:24;942:5;924:24;:::i;:::-;915:33;;970:66;963:5;960:77;957:103;;1040:18;;:::i;:::-;957:103;1087:1;1080:5;1076:13;1069:20;;862:233;;;:::o;1101:171::-;1140:3;1163:24;1181:5;1163:24;:::i;:::-;1154:33;;1209:4;1202:5;1199:15;1196:41;;1217:18;;:::i;:::-;1196:41;1264:1;1257:5;1253:13;1246:20;;1101:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139000",
								"executionCost": "70889",
								"totalCost": "209889"
							},
							"external": {
								"burnToken()": "26741",
								"createNewToken()": "26698",
								"getOwner()": "2515"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 668,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 180,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 162,
									"end": 187,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 162,
									"end": 187,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 294,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 294,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 294,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 294,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 241,
									"end": 251,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 225,
									"end": 230,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 230,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 225,
									"end": 252,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 225,
									"end": 252,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 225,
									"end": 252,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 225,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 284,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 262,
									"end": 274,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 280,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 275,
									"end": 280,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 275,
									"end": 280,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 275,
									"end": 280,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 262,
									"end": 281,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 262,
									"end": 281,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 262,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 262,
									"end": 281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 262,
									"end": 281,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 281,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 262,
									"end": 287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 262,
									"end": 287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 262,
									"end": 287,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 287,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 668,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 668,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 668,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 668,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7133d5e22fba081bb9821a4d314d9bb0d894943b07e28495979489ec19adce964736f6c63430008160033",
									".code": [
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "754FC38C"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "FAA0A264"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 668,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 509,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 509,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 509,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 589,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 421,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 595,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 595,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 595,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 661,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 509,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 574,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 574,
											"end": 579,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 574,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 561,
											"end": 580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 561,
											"end": 580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 561,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 561,
											"end": 582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 561,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 487,
											"end": 492,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 487,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 661,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 646,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 646,
											"end": 651,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 646,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 633,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 773,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 638,
											"end": 639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 735,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 762,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 779,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 779,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 779,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 779,
											"end": 856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1095,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 862,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 901,
											"end": 904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 942,
											"end": 947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 924,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 924,
											"end": 948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 948,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 924,
											"end": 948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 915,
											"end": 948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 957,
											"end": 1060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1040,
											"end": 1058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1040,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1060,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 957,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1080,
											"end": 1085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1181,
											"end": 1186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1163,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1163,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1196,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1196,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity-fundamentals/contracts/FunctionsExample.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burnToken()": "faa0a264",
							"createNewToken()": "754fc38c",
							"getOwner()": "893d20e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-fundamentals/contracts/FunctionsExample.sol\":\"FunctionsExample\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity-fundamentals/contracts/FunctionsExample.sol\":{\"keccak256\":\"0xed0726c722ecf4cdaa5dd53897ae654f5384a9392ff726d0677fe1fda9f557c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21b1689ab068fcff0aa9b65d32779126b881c555ff522c3974e1f6814c1b254c\",\"dweb:/ipfs/QmdQcSmfmYfokYdZQoaDuN1qYakyPbTkLfn1JiXLs3pu6M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "solidity-fundamentals/contracts/FunctionsExample.sol:FunctionsExample",
								"label": "tokenBalance",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "solidity-fundamentals/contracts/FunctionsExample.sol:FunctionsExample",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 10,
								"contract": "solidity-fundamentals/contracts/FunctionsExample.sol:FunctionsExample",
								"label": "tokenPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> solidity-fundamentals/contracts/FunctionsExample.sol:11:5:\n   |\n11 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 294,
					"file": "solidity-fundamentals/contracts/FunctionsExample.sol",
					"start": 194
				},
				"type": "Warning"
			}
		],
		"sources": {
			"solidity-fundamentals/contracts/FunctionsExample.sol": {
				"ast": {
					"absolutePath": "solidity-fundamentals/contracts/FunctionsExample.sol",
					"exportedSymbols": {
						"FunctionsExample": [
							67
						]
					},
					"id": 68,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FunctionsExample",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "FunctionsExample",
							"nameLocation": "67:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "tokenBalance",
									"nameLocation": "115:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "90:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "98:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "90:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "109:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "150:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "134:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "134:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "tokenPrice",
									"nameLocation": "167:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "162:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "162:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "180:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "215:79:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "225:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "241:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "245:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "241:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "233:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 14,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "233:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "233:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "225:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "225:27:0"
											},
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 21,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "262:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 23,
														"indexExpression": {
															"id": 22,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "275:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "262:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "284:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "262:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "262:25:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:0"
									},
									"scope": 67,
									"src": "194:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "335:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 31,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "353:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "357:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "353:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 33,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "367:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "353:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420616c6c6f776564",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "374:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															},
															"value": "You are not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_407a93cd9588e1f87530ae7a55d9dae87b125ed01cf287ec5fa47d65e38e4c3c",
																"typeString": "literal_string \"You are not allowed\""
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "345:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "345:51:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "406:1:0"
											}
										]
									},
									"id": 40,
									"name": "onlyOwner",
									"nameLocation": "325:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:0:0"
									},
									"src": "316:98:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "470:29:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 44,
												"id": 46,
												"nodeType": "Return",
												"src": "480:12:0"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "430:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "461:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:9:0"
									},
									"scope": 67,
									"src": "421:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "542:47:0",
										"statements": [
											{
												"expression": {
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "561:21:0",
													"subExpression": {
														"baseExpression": {
															"id": 51,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "561:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 53,
														"indexExpression": {
															"id": 52,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "574:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "561:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "561:21:0"
											}
										]
									},
									"functionSelector": "754fc38c",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createNewToken",
									"nameLocation": "518:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:0:0"
									},
									"scope": 67,
									"src": "509:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "623:38:0",
										"statements": [
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "633:21:0",
													"subExpression": {
														"baseExpression": {
															"id": 60,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "633:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 62,
														"indexExpression": {
															"id": 61,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "646:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "633:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "633:21:0"
											}
										]
									},
									"functionSelector": "faa0a264",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "604:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:0"
									},
									"scope": 67,
									"src": "595:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 68,
							"src": "58:610:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:636:0"
				},
				"id": 0
			}
		}
	}
}